type Table {
	id: ID!
	name: String!
	hasPassword: Boolean!
	createdAt: String!
	cells: [TableCell!]!
}

type TableCell {
	id: ID!
	rowIndex: Int!
	colIndex: Int!
	value: String!
	updatedAt: String!
}

type Query {
	tables: [Table!]!
	table(id: ID!): Table
	cells(tableId: ID!): [TableCell!]!
}

type Mutation {
	createTable(name: String!, rows: Int, cols: Int, password: String): Table!
	deleteTable(id: ID!): Boolean!
	updateTablePassword(id: ID!, password: String): Boolean!
	upsertCell(tableId: ID!, rowIndex: Int!, colIndex: Int!, value: String!): Boolean!
}


